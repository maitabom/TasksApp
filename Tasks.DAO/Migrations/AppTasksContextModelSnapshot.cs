// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tasks.DAO;

#nullable disable

namespace Tasks.DAO.Migrations
{
    [DbContext(typeof(AppTasksContext))]
    partial class AppTasksContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.11");

            modelBuilder.Entity("Tasks.Model.Subtarefa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Concluido")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("TarefaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TarefaId");

                    b.ToTable("Subtarefas");
                });

            modelBuilder.Entity("Tasks.Model.Tarefa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Atualizado")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Concluido")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Criado")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataPrevisao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Tarefas");
                });

            modelBuilder.Entity("Tasks.Model.Subtarefa", b =>
                {
                    b.HasOne("Tasks.Model.Tarefa", null)
                        .WithMany("Subtarefas")
                        .HasForeignKey("TarefaId");
                });

            modelBuilder.Entity("Tasks.Model.Tarefa", b =>
                {
                    b.Navigation("Subtarefas");
                });
#pragma warning restore 612, 618
        }
    }
}
